{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = plotComponentFactory;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n} // The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\n\n\nvar eventNames = ['AfterExport', 'AfterPlot', 'Animated', 'AnimatingFrame', 'AnimationInterrupted', 'AutoSize', 'BeforeExport', 'BeforeHover', 'ButtonClicked', 'Click', 'ClickAnnotation', 'Deselect', 'DoubleClick', 'Framework', 'Hover', 'LegendClick', 'LegendDoubleClick', 'Relayout', 'Relayouting', 'Restyle', 'Redraw', 'Selected', 'Selecting', 'SliderChange', 'SliderEnd', 'SliderStart', 'SunburstClick', 'Transitioning', 'TransitionInterrupted', 'Unhover'];\nvar updateEvents = ['plotly_restyle', 'plotly_redraw', 'plotly_relayout', 'plotly_relayouting', 'plotly_doubleclick', 'plotly_animated', 'plotly_sunburstclick']; // Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\n\nvar isBrowser = typeof window !== 'undefined';\n\nfunction plotComponentFactory(Plotly) {\n  var PlotlyComponent = /*#__PURE__*/function (_Component) {\n    _inherits(PlotlyComponent, _Component);\n\n    var _super = _createSuper(PlotlyComponent);\n\n    function PlotlyComponent(props) {\n      var _this;\n\n      _classCallCheck(this, PlotlyComponent);\n\n      _this = _super.call(this, props);\n      _this.p = Promise.resolve();\n      _this.resizeHandler = null;\n      _this.handlers = {};\n      _this.syncWindowResize = _this.syncWindowResize.bind(_assertThisInitialized(_this));\n      _this.syncEventHandlers = _this.syncEventHandlers.bind(_assertThisInitialized(_this));\n      _this.attachUpdateEvents = _this.attachUpdateEvents.bind(_assertThisInitialized(_this));\n      _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n      _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_this));\n      _this.figureCallback = _this.figureCallback.bind(_assertThisInitialized(_this));\n      _this.updatePlotly = _this.updatePlotly.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(PlotlyComponent, [{\n      key: \"updatePlotly\",\n      value: function updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n        var _this2 = this;\n\n        this.p = this.p.then(function () {\n          if (_this2.unmounting) {\n            return;\n          }\n\n          if (!_this2.el) {\n            throw new Error('Missing element reference');\n          } // eslint-disable-next-line consistent-return\n\n\n          return Plotly.react(_this2.el, {\n            data: _this2.props.data,\n            layout: _this2.props.layout,\n            config: _this2.props.config,\n            frames: _this2.props.frames\n          });\n        }).then(function () {\n          if (_this2.unmounting) {\n            return;\n          }\n\n          _this2.syncWindowResize(shouldInvokeResizeHandler);\n\n          _this2.syncEventHandlers();\n\n          _this2.figureCallback(figureCallbackFunction);\n\n          if (shouldAttachUpdateEvents) {\n            _this2.attachUpdateEvents();\n          }\n        })[\"catch\"](function (err) {\n          if (_this2.props.onError) {\n            _this2.props.onError(err);\n          }\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.unmounting = false;\n        this.updatePlotly(true, this.props.onInitialized, true);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this.unmounting = false; // frames *always* changes identity so fall back to check length only :(\n\n        var numPrevFrames = prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n        var numNextFrames = this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n        var figureChanged = !(prevProps.layout === this.props.layout && prevProps.data === this.props.data && prevProps.config === this.props.config && numNextFrames === numPrevFrames);\n        var revisionDefined = prevProps.revision !== void 0;\n        var revisionChanged = prevProps.revision !== this.props.revision;\n\n        if (!figureChanged && (!revisionDefined || revisionDefined && !revisionChanged)) {\n          return;\n        }\n\n        this.updatePlotly(false, this.props.onUpdate, false);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.unmounting = true;\n        this.figureCallback(this.props.onPurge);\n\n        if (this.resizeHandler && isBrowser) {\n          window.removeEventListener('resize', this.resizeHandler);\n          this.resizeHandler = null;\n        }\n\n        this.removeUpdateEvents();\n        Plotly.purge(this.el);\n      }\n    }, {\n      key: \"attachUpdateEvents\",\n      value: function attachUpdateEvents() {\n        var _this3 = this;\n\n        if (!this.el || !this.el.removeListener) {\n          return;\n        }\n\n        updateEvents.forEach(function (updateEvent) {\n          _this3.el.on(updateEvent, _this3.handleUpdate);\n        });\n      }\n    }, {\n      key: \"removeUpdateEvents\",\n      value: function removeUpdateEvents() {\n        var _this4 = this;\n\n        if (!this.el || !this.el.removeListener) {\n          return;\n        }\n\n        updateEvents.forEach(function (updateEvent) {\n          _this4.el.removeListener(updateEvent, _this4.handleUpdate);\n        });\n      }\n    }, {\n      key: \"handleUpdate\",\n      value: function handleUpdate() {\n        this.figureCallback(this.props.onUpdate);\n      }\n    }, {\n      key: \"figureCallback\",\n      value: function figureCallback(callback) {\n        if (typeof callback === 'function') {\n          var _this$el = this.el,\n              data = _this$el.data,\n              layout = _this$el.layout;\n          var frames = this.el._transitionData ? this.el._transitionData._frames : null;\n          var figure = {\n            data: data,\n            layout: layout,\n            frames: frames\n          };\n          callback(figure, this.el);\n        }\n      }\n    }, {\n      key: \"syncWindowResize\",\n      value: function syncWindowResize(invoke) {\n        var _this5 = this;\n\n        if (!isBrowser) {\n          return;\n        }\n\n        if (this.props.useResizeHandler && !this.resizeHandler) {\n          this.resizeHandler = function () {\n            return Plotly.Plots.resize(_this5.el);\n          };\n\n          window.addEventListener('resize', this.resizeHandler);\n\n          if (invoke) {\n            this.resizeHandler();\n          }\n        } else if (!this.props.useResizeHandler && this.resizeHandler) {\n          window.removeEventListener('resize', this.resizeHandler);\n          this.resizeHandler = null;\n        }\n      }\n    }, {\n      key: \"getRef\",\n      value: function getRef(el) {\n        this.el = el;\n\n        if (this.props.debug && isBrowser) {\n          window.gd = this.el;\n        }\n      } // Attach and remove event handlers as they're added or removed from props:\n\n    }, {\n      key: \"syncEventHandlers\",\n      value: function syncEventHandlers() {\n        var _this6 = this;\n\n        eventNames.forEach(function (eventName) {\n          var prop = _this6.props['on' + eventName];\n          var handler = _this6.handlers[eventName];\n          var hasHandler = Boolean(handler);\n\n          if (prop && !hasHandler) {\n            _this6.addEventHandler(eventName, prop);\n          } else if (!prop && hasHandler) {\n            // Needs to be removed:\n            _this6.removeEventHandler(eventName);\n          } else if (prop && hasHandler && prop !== handler) {\n            // replace the handler\n            _this6.removeEventHandler(eventName);\n\n            _this6.addEventHandler(eventName, prop);\n          }\n        });\n      }\n    }, {\n      key: \"addEventHandler\",\n      value: function addEventHandler(eventName, prop) {\n        this.handlers[eventName] = prop;\n        this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      }\n    }, {\n      key: \"removeEventHandler\",\n      value: function removeEventHandler(eventName) {\n        this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n        delete this.handlers[eventName];\n      }\n    }, {\n      key: \"getPlotlyEventName\",\n      value: function getPlotlyEventName(eventName) {\n        return 'plotly_' + eventName.toLowerCase();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          id: this.props.divId,\n          style: this.props.style,\n          ref: this.getRef,\n          className: this.props.className\n        });\n      }\n    }]);\n\n    return PlotlyComponent;\n  }(_react.Component);\n\n  PlotlyComponent.propTypes = {\n    data: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n    config: _propTypes[\"default\"].object,\n    layout: _propTypes[\"default\"].object,\n    frames: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].object),\n    revision: _propTypes[\"default\"].number,\n    onInitialized: _propTypes[\"default\"].func,\n    onPurge: _propTypes[\"default\"].func,\n    onError: _propTypes[\"default\"].func,\n    onUpdate: _propTypes[\"default\"].func,\n    debug: _propTypes[\"default\"].bool,\n    style: _propTypes[\"default\"].object,\n    className: _propTypes[\"default\"].string,\n    useResizeHandler: _propTypes[\"default\"].bool,\n    divId: _propTypes[\"default\"].string\n  };\n  eventNames.forEach(function (eventName) {\n    PlotlyComponent.propTypes['on' + eventName] = _propTypes[\"default\"].func;\n  });\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    }\n  };\n  return PlotlyComponent;\n}","map":{"version":3,"mappings":"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","names":["eventNames","updateEvents","isBrowser","window","plotComponentFactory","Plotly","PlotlyComponent","_inherits","props","_classCallCheck","_this","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","_createClass","key","value","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","then","_this2","unmounting","el","Error","react","data","layout","config","frames","err","onError","onInitialized","prevProps","numPrevFrames","length","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","removeEventListener","removeUpdateEvents","purge","removeListener","forEach","updateEvent","_this3","on","_this4","callback","_transitionData","_frames","figure","invoke","useResizeHandler","Plots","resize","_this5","addEventListener","debug","gd","eventName","prop","_this6","handler","hasHandler","Boolean","addEventHandler","removeEventHandler","getPlotlyEventName","toLowerCase","_react","id","divId","style","ref","className","Component","propTypes","PropTypes","arrayOf","object","number","func","bool","string","defaultProps","position","display"],"sources":["D:\\Akaash\\VESIT_TE_PROJECT\\Project_Git_Link\\node_modules\\src\\factory.js"],"sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'BeforeHover',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Relayouting',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'SunburstClick',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_relayouting',\n  'plotly_doubleclick',\n  'plotly_animated',\n  'plotly_sunburstclick',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          if (!this.el) {\n            throw new Error('Missing element reference');\n          }\n          // eslint-disable-next-line consistent-return\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          this.syncWindowResize(shouldInvokeResizeHandler);\n          this.syncEventHandlers();\n          this.figureCallback(figureCallbackFunction);\n          if (shouldAttachUpdateEvents) {\n            this.attachUpdateEvents();\n          }\n        })\n        .catch((err) => {\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach((eventName) => {\n        const prop = this.props['on' + eventName];\n        const handler = this.handlers[eventName];\n        const hasHandler = Boolean(handler);\n\n        if (prop && !hasHandler) {\n          this.addEventHandler(eventName, prop);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.removeEventHandler(eventName);\n        } else if (prop && hasHandler && prop !== handler) {\n          // replace the handler\n          this.removeEventHandler(eventName);\n          this.addEventHandler(eventName, prop);\n        }\n      });\n    }\n\n    addEventHandler(eventName, prop) {\n      this.handlers[eventName] = prop;\n      this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n    }\n\n    removeEventHandler(eventName) {\n      this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      delete this.handlers[eventName];\n    }\n\n    getPlotlyEventName(eventName) {\n      return 'plotly_' + eventName.toLowerCase();\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach((eventName) => {\n    PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n"]},"metadata":{},"sourceType":"script"}