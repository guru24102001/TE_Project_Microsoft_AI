{"ast":null,"code":"var _jsxFileName = \"D:\\\\Akaash\\\\VESIT_TE_PROJECT\\\\Project_Git_Link\\\\Frontend\\\\footprint\\\\src\\\\components\\\\StatewiseScatter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Plotly = window.Plotly;\nconst Plot = createPlotlyComponent(Plotly);\n_c = Plot;\n\nconst StatewiseScatter = _ref => {\n  _s();\n\n  let {\n    home\n  } = _ref;\n  // const [plotData, setPlotData] = useState([]);\n  const [data, setData] = useState([]);\n  const [layout, setLayout] = useState({});\n  useEffect(() => {\n    const url = \"http://localhost:8000\";\n    const config = {\n      //http://localhost/3000\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n\n    try {\n      const getPlotData = async () => {\n        const response = await axios.get(`${url}/api/state-wise/scatterplot`, config); // console.log(response.data);\n\n        if (response.status === 200) {\n          console.log(response.data);\n          setData([{\n            type: \"scattermapbox\",\n            lon: response.data.longitude,\n            lat: response.data.latitude,\n            mode: \"markers\",\n            markers: {\n              size: 40,\n              color: response.data.color,\n              opacity: 0.6\n            },\n            text: response.data.plastic_amount,\n            hovertemplate: \"<b>Plastic Amount</b>: %{text}\" + \"<br><b>Latitude</b>: %{lat}\" + \"<br><b>Longitude</b>: %{lon}<br>\",\n            hoverinfo: \"text\"\n          }]);\n          setLayout({\n            title: \"State-Wise Plastic waste\",\n            autosize: false,\n            width: 1000,\n            height: 600,\n            hovermode: \"closest\",\n            showlegend: false,\n            mapbox: {\n              bearing: 0,\n              center: {\n                lat: 19.0,\n                lon: 75.0\n              },\n              pitch: 0,\n              zoom: 6,\n              style: \"light\"\n            }\n          });\n        }\n      };\n\n      getPlotData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  const config = {\n    mapboxAccessToken: \"pk.eyJ1IjoibWFuaTIwMDIiLCJhIjoiY2wwbDZiMDM0MHRiaTNjbTl3ejFzcW1nZCJ9.7nz-xKS_PxZsh5G6TKHgCg\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      className: \"Plotgraph__plot\",\n      data: data,\n      layout: layout,\n      config: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n};\n\n_s(StatewiseScatter, \"P/Iepl4+zBu71Gw83iZ8HgTDMC8=\");\n\n_c2 = StatewiseScatter;\nexport default StatewiseScatter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c2, \"StatewiseScatter\");","map":{"version":3,"sources":["D:/Akaash/VESIT_TE_PROJECT/Project_Git_Link/Frontend/footprint/src/components/StatewiseScatter.js"],"names":["React","useState","useEffect","axios","createPlotlyComponent","Plotly","window","Plot","StatewiseScatter","home","data","setData","layout","setLayout","url","config","getPlotData","response","get","status","console","log","type","lon","longitude","lat","latitude","mode","markers","size","color","opacity","text","plastic_amount","hovertemplate","hoverinfo","title","autosize","width","height","hovermode","showlegend","mapbox","bearing","center","pitch","zoom","style","error","mapboxAccessToken"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nconst Plotly = window.Plotly;\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nconst StatewiseScatter = ({ home }) => {\r\n\t// const [plotData, setPlotData] = useState([]);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [layout, setLayout] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst url = \"http://localhost:8000\";\r\n\t\tconst config = {\r\n\t\t\t//http://localhost/3000\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst getPlotData = async () => {\r\n\t\t\t\tconst response = await axios.get(\r\n\t\t\t\t\t`${url}/api/state-wise/scatterplot`,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t);\r\n\t\t\t\t// console.log(response.data);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t\tsetData([\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttype: \"scattermapbox\",\r\n\t\t\t\t\t\t\tlon: response.data.longitude,\r\n\t\t\t\t\t\t\tlat: response.data.latitude,\r\n\t\t\t\t\t\t\tmode: \"markers\",\r\n\r\n\t\t\t\t\t\t\tmarkers: {\r\n\t\t\t\t\t\t\t\tsize: 40,\r\n\t\t\t\t\t\t\t\tcolor: response.data.color,\r\n\t\t\t\t\t\t\t\topacity: 0.6,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttext: response.data.plastic_amount,\r\n\t\t\t\t\t\t\thovertemplate:\r\n\t\t\t\t\t\t\t\t\"<b>Plastic Amount</b>: %{text}\" +\r\n\t\t\t\t\t\t\t\t\"<br><b>Latitude</b>: %{lat}\" +\r\n\t\t\t\t\t\t\t\t\"<br><b>Longitude</b>: %{lon}<br>\",\r\n\t\t\t\t\t\t\thoverinfo: \"text\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]);\r\n\r\n\t\t\t\t\tsetLayout({\r\n\t\t\t\t\t\ttitle: \"State-Wise Plastic waste\",\r\n\t\t\t\t\t\tautosize: false,\r\n\t\t\t\t\t\twidth: 1000,\r\n\t\t\t\t\t\theight: 600,\r\n\t\t\t\t\t\thovermode: \"closest\",\r\n\t\t\t\t\t\tshowlegend: false,\r\n\t\t\t\t\t\tmapbox: {\r\n\t\t\t\t\t\t\tbearing: 0,\r\n\t\t\t\t\t\t\tcenter: {\r\n\t\t\t\t\t\t\t\tlat: 19.0,\r\n\t\t\t\t\t\t\t\tlon: 75.0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tpitch: 0,\r\n\t\t\t\t\t\t\tzoom: 6,\r\n\t\t\t\t\t\t\tstyle: \"light\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetPlotData();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst config = {\r\n\t\tmapboxAccessToken:\r\n\t\t\t\"pk.eyJ1IjoibWFuaTIwMDIiLCJhIjoiY2wwbDZiMDM0MHRiaTNjbTl3ejFzcW1nZCJ9.7nz-xKS_PxZsh5G6TKHgCg\",\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Plot\r\n\t\t\t\tclassName=\"Plotgraph__plot\"\r\n\t\t\t\tdata={data}\r\n\t\t\t\tlayout={layout}\r\n\t\t\t\tconfig={config}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StatewiseScatter;\r\n"]},"metadata":{},"sourceType":"module"}