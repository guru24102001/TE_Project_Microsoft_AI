{"ast":null,"code":"var _jsxFileName = \"D:\\\\Akaash\\\\VESIT_TE_PROJECT\\\\Project_Git_Link\\\\Frontend\\\\footprint\\\\src\\\\components\\\\Plot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Plot.css\";\nimport \"../css/Footer.css\";\nimport Header from \"../components/Header\";\nimport Footer from \"./Footer\";\nimport Dropdown from \"../components/Dropdown\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Plotly = window.Plotly;\nconst Plot = createPlotlyComponent(Plotly);\n_c = Plot;\n\nconst Plotgraph = _ref => {\n  _s();\n\n  let {\n    home\n  } = _ref;\n  const [plotData, setPlotData] = useState([]);\n  const [currentOption, setCurrentOption] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [layout, setLayout] = useState({});\n  console.log(currentOption);\n  useEffect(() => {\n    const url = \"http://localhost:8000\";\n    const config = {\n      //http://localhost/3000\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n    const path = {\n      choropleth: \"/choropleth\",\n      \"recycling-plants\": \"recycling-plant\",\n      \"ulb-wise\": \"ulb-wise/scatterplot\",\n      \"state-wise\": \"state-wise/scatterplot\"\n    };\n\n    try {\n      const getPlotData = async () => {\n        const response = await axios.get(`${url}/api/${path[currentOption]}`, config); // console.log(response.data);\n\n        if (response.status === 200) {\n          // console.log(response.data);\n          // console.log(response.data.latitude);\n          // console.log(response.data.longitude);\n          setPlotData(response.data);\n          const commondata = {\n            type: \"scattermapbox\",\n            lon: response.data.longitude,\n            lat: response.data.latitude,\n            mode: \"markers\"\n          };\n          const commonlayout = {\n            autosize: false,\n            width: 1000,\n            height: 600,\n            hovermode: \"closest\",\n            showlegend: false,\n            mapbox: {\n              bearing: 0,\n              center: {\n                lat: 19.0,\n                lon: 75.0\n              },\n              pitch: 0,\n              zoom: 4,\n              style: \"light\"\n            }\n          };\n\n          if (currentOption === \"recycling-plants\") {\n            setData([{ ...commondata,\n              recyclingName: response.data.recyclingName,\n              materialsAccepted: response.data.materialsAccepted,\n              recycledProducts: response.data.recycledProducts,\n              marker: {\n                symbol: \"marker\",\n                size: 10,\n                color: \"green\"\n              },\n              hovertemplate: \"<b>Latitude</b>: %{lat}\" + \"<br><b>Longitude</b>: %{lon}<br>\"\n            }]);\n            setLayout({\n              title: \"Recycling Units In India\",\n              ...commonlayout\n            });\n          } else if (currentOption === \"state-wise\") {\n            setData([{ ...commondata,\n              markers: {\n                size: 40,\n                color: response.data.color,\n                opacity: 0.6\n              },\n              text: response.data.plastic_amount,\n              hovertemplate: \"<b>Plastic Amount</b>: %{text}\" + \"<br><b>Latitude</b>: %{lat}\" + \"<br><b>Longitude</b>: %{lon}<br>\",\n              hoverinfo: \"text\"\n            }]);\n            setLayout({\n              title: \"State-Wise Plastic waste\",\n              ...commonlayout,\n              zoom: 6\n            });\n          }\n        }\n      };\n\n      getPlotData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [currentOption]); // console.log(data);\n\n  const config = {\n    mapboxAccessToken: \"pk.eyJ1IjoibWFuaTIwMDIiLCJhIjoiY2wwbDZiMDM0MHRiaTNjbTl3ejFzcW1nZCJ9.7nz-xKS_PxZsh5G6TKHgCg\"\n  };\n  const options = {\n    \"recycling-plants\": \"Recycling Plants\",\n    choropleth: \"Choropleth map\",\n    \"ulb-wise\": \"ULB wise Scatter plot\",\n    \"state-wise\": \"State wise Scatter plot\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      home: home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plotgraph\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Plotgraph__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Plotgraph__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"~\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this), \"Recycling Plants\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          setCurrentOption: setCurrentOption,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this), currentOption ? /*#__PURE__*/_jsxDEV(Plot, {\n        className: \"Plotgraph__plot\",\n        data: data,\n        layout: layout,\n        config: config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 1000,\n          height: 600,\n          margin: \"3rem auto\"\n        },\n        className: \"Plotgraph__plot\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Please select an option \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"Landing__footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer__container\",\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Plotgraph, \"jhNo/JXBKpWnbAkQ9qD7lp/0T+Y=\");\n\n_c2 = Plotgraph;\nexport default Plotgraph;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c2, \"Plotgraph\");","map":{"version":3,"sources":["D:/Akaash/VESIT_TE_PROJECT/Project_Git_Link/Frontend/footprint/src/components/Plot.js"],"names":["React","useEffect","useState","axios","Header","Footer","Dropdown","createPlotlyComponent","Plotly","window","Plot","Plotgraph","home","plotData","setPlotData","currentOption","setCurrentOption","data","setData","layout","setLayout","console","log","url","config","path","choropleth","getPlotData","response","get","status","commondata","type","lon","longitude","lat","latitude","mode","commonlayout","autosize","width","height","hovermode","showlegend","mapbox","bearing","center","pitch","zoom","style","recyclingName","materialsAccepted","recycledProducts","marker","symbol","size","color","hovertemplate","title","markers","opacity","text","plastic_amount","hoverinfo","error","mapboxAccessToken","options","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/Plot.css\";\r\nimport \"../css/Footer.css\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"./Footer\";\r\nimport Dropdown from \"../components/Dropdown\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nconst Plotly = window.Plotly;\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nconst Plotgraph = ({ home }) => {\r\n\tconst [plotData, setPlotData] = useState([]);\r\n\tconst [currentOption, setCurrentOption] = useState(\"\");\r\n\tconst [data, setData] = useState([]);\r\n\tconst [layout, setLayout] = useState({});\r\n\r\n\tconsole.log(currentOption);\r\n\tuseEffect(() => {\r\n\t\tconst url = \"http://localhost:8000\";\r\n\t\tconst config = {\r\n\t\t\t//http://localhost/3000\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\t\t};\r\n\t\tconst path = {\r\n\t\t\tchoropleth: \"/choropleth\",\r\n\t\t\t\"recycling-plants\": \"recycling-plant\",\r\n\t\t\t\"ulb-wise\": \"ulb-wise/scatterplot\",\r\n\t\t\t\"state-wise\": \"state-wise/scatterplot\",\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst getPlotData = async () => {\r\n\t\t\t\tconst response = await axios.get(\r\n\t\t\t\t\t`${url}/api/${path[currentOption]}`,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t);\r\n\t\t\t\t// console.log(response.data);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\t// console.log(response.data);\r\n\t\t\t\t\t// console.log(response.data.latitude);\r\n\t\t\t\t\t// console.log(response.data.longitude);\r\n\t\t\t\t\tsetPlotData(response.data);\r\n\t\t\t\t\tconst commondata = {\r\n\t\t\t\t\t\ttype: \"scattermapbox\",\r\n\t\t\t\t\t\tlon: response.data.longitude,\r\n\t\t\t\t\t\tlat: response.data.latitude,\r\n\t\t\t\t\t\tmode: \"markers\",\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst commonlayout = {\r\n\t\t\t\t\t\tautosize: false,\r\n\t\t\t\t\t\twidth: 1000,\r\n\t\t\t\t\t\theight: 600,\r\n\t\t\t\t\t\thovermode: \"closest\",\r\n\t\t\t\t\t\tshowlegend: false,\r\n\t\t\t\t\t\tmapbox: {\r\n\t\t\t\t\t\t\tbearing: 0,\r\n\t\t\t\t\t\t\tcenter: {\r\n\t\t\t\t\t\t\t\tlat: 19.0,\r\n\t\t\t\t\t\t\t\tlon: 75.0,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tpitch: 0,\r\n\t\t\t\t\t\t\tzoom: 4,\r\n\t\t\t\t\t\t\tstyle: \"light\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (currentOption === \"recycling-plants\") {\r\n\t\t\t\t\t\tsetData([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t...commondata,\r\n\t\t\t\t\t\t\t\trecyclingName: response.data.recyclingName,\r\n\t\t\t\t\t\t\t\tmaterialsAccepted: response.data.materialsAccepted,\r\n\t\t\t\t\t\t\t\trecycledProducts: response.data.recycledProducts,\r\n\t\t\t\t\t\t\t\tmarker: {\r\n\t\t\t\t\t\t\t\t\tsymbol: \"marker\",\r\n\t\t\t\t\t\t\t\t\tsize: 10,\r\n\t\t\t\t\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\thovertemplate:\r\n\t\t\t\t\t\t\t\t\t\"<b>Latitude</b>: %{lat}\" +\r\n\t\t\t\t\t\t\t\t\t\"<br><b>Longitude</b>: %{lon}<br>\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t\tsetLayout({\r\n\t\t\t\t\t\t\ttitle: \"Recycling Units In India\",\r\n\t\t\t\t\t\t\t...commonlayout,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (currentOption === \"state-wise\") {\r\n\t\t\t\t\t\tsetData([\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t...commondata,\r\n\t\t\t\t\t\t\t\tmarkers: {\r\n\t\t\t\t\t\t\t\t\tsize: 40,\r\n\t\t\t\t\t\t\t\t\tcolor: response.data.color,\r\n\t\t\t\t\t\t\t\t\topacity: 0.6,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttext: response.data.plastic_amount,\r\n\t\t\t\t\t\t\t\thovertemplate:\r\n\t\t\t\t\t\t\t\t\t\"<b>Plastic Amount</b>: %{text}\" +\r\n\t\t\t\t\t\t\t\t\t\"<br><b>Latitude</b>: %{lat}\" +\r\n\t\t\t\t\t\t\t\t\t\"<br><b>Longitude</b>: %{lon}<br>\",\r\n\t\t\t\t\t\t\t\thoverinfo: \"text\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t\tsetLayout({\r\n\t\t\t\t\t\t\ttitle: \"State-Wise Plastic waste\",\r\n\t\t\t\t\t\t\t...commonlayout,\r\n\t\t\t\t\t\t\tzoom: 6,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetPlotData();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}, [currentOption]);\r\n\r\n\t// console.log(data);\r\n\r\n\tconst config = {\r\n\t\tmapboxAccessToken:\r\n\t\t\t\"pk.eyJ1IjoibWFuaTIwMDIiLCJhIjoiY2wwbDZiMDM0MHRiaTNjbTl3ejFzcW1nZCJ9.7nz-xKS_PxZsh5G6TKHgCg\",\r\n\t};\r\n\r\n\tconst options = {\r\n\t\t\"recycling-plants\": \"Recycling Plants\",\r\n\t\tchoropleth: \"Choropleth map\",\r\n\t\t\"ulb-wise\": \"ULB wise Scatter plot\",\r\n\t\t\"state-wise\": \"State wise Scatter plot\",\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header home={home} />\r\n\r\n\t\t\t<div className=\"Plotgraph\">\r\n\t\t\t\t<div className=\"Plotgraph__header\">\r\n\t\t\t\t\t<h3 className=\"Plotgraph__title\">\r\n\t\t\t\t\t\t<span>~</span>Recycling Plants{\" \"}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<Dropdown setCurrentOption={setCurrentOption} options={options} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{currentOption ? (\r\n\t\t\t\t\t<Plot\r\n\t\t\t\t\t\tclassName=\"Plotgraph__plot\"\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tlayout={layout}\r\n\t\t\t\t\t\tconfig={config}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{ width: 1000, height: 600, margin: \"3rem auto\" }}\r\n\t\t\t\t\t\tclassName=\"Plotgraph__plot\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3> Please select an option </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<section id=\"Landing__footer\">\r\n\t\t\t\t\t<div className=\"footer__container\">\r\n\t\t\t\t\t\t<Footer />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Plotgraph;\r\n"]},"metadata":{},"sourceType":"module"}