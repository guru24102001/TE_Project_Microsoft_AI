{"ast":null,"code":"var _jsxFileName = \"D:\\\\Akaash\\\\VESIT_TE_PROJECT\\\\Project_Git_Link\\\\Frontend\\\\footprint\\\\src\\\\pages\\\\Dataset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Dataset.css\";\nimport \"../css/Footer.css\";\nimport Footer from \"../components/Footer\";\nimport ReactPaginate from \"react-paginate\";\nimport { Skeleton } from \"@mui/material\";\nimport Header from \"../components/Header\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dataset = _ref => {\n  _s();\n\n  let {\n    home\n  } = _ref;\n  const [csvData, setCsvData] = useState(null);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    const url = \"http://localhost:8000\";\n    const config = {\n      //http://localhost/3000\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n\n    try {\n      const getDataset = async () => {\n        const response = await axios.get(`${url}/api/get-dataset?page=${page}`, config); // console.log(response.data);\n\n        if (response.status === 200) {\n          // const jsonData = JSON.parse(response.data);\n          setCsvData(response.data);\n          console.log(response.data);\n        }\n      };\n\n      getDataset();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [page]);\n\n  const handlePageChange = event => {\n    setPage(event.selected + 1);\n  };\n\n  const downloadFile = async () => {\n    const url = \"http://localhost:8000\";\n    const config = {\n      //http://localhost/3000\n      responseType: \"blob\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"text/csv\",\n      \"Content-Disposition\": 'attachment; filename=\"plasticFootprint.csv\"'\n    };\n\n    try {\n      const download = async () => {\n        await axios.get(`${url}/api/dataset/download-dataset`, config).then(response => {\n          console.log(\"Successful\");\n          console.log(response); // saveAs(response.data, \"plasticFootprint.csv\");\n        }).catch(e => console.log(e));\n      };\n\n      download();\n    } catch (error) {\n      console.log(\"Something went wrong\");\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dataset__page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      home: home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataset__header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Dataset__title\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), \" Dataset\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dataset__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dataset\",\n        children: csvData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"Dataset__table\" // style={{ width: \"100%\", minWidth: \"1000px\" }}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.keys(csvData[0]).map((title, titleKey) => {\n                  console.log(title);\n                  return /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: title\n                  }, titleKey, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 19\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: csvData.map((row, rowKey) => {\n                // console.log(row);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: Object.keys(row).map((col, colKey) => {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: row[col]\n                    }, colKey, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 21\n                    }, this);\n                  })\n                }, rowKey, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 12\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          className: \"Dataset__skeleton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }, this),\n      onPageChange: handlePageChange,\n      pageCount: 7,\n      previousLabel: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this),\n      containerClassName: \"navigationButtons\",\n      previousLinkClassName: \"previousButton\",\n      nextLinkClassName: \"nextButton\",\n      disabledClassName: \"navigationDisabled\",\n      activeClassName: \"navigationActive\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"Landing__footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer__container\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dataset, \"XfgPFSKwZShwyPQFvWjj091iSZ4=\");\n\n_c = Dataset;\nexport default Dataset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dataset\");","map":{"version":3,"sources":["D:/Akaash/VESIT_TE_PROJECT/Project_Git_Link/Frontend/footprint/src/pages/Dataset.js"],"names":["React","useState","useEffect","axios","Footer","ReactPaginate","Skeleton","Header","ArrowForwardIosIcon","ArrowBackIosIcon","Dataset","home","csvData","setCsvData","page","setPage","url","config","getDataset","response","get","status","data","console","log","error","handlePageChange","event","selected","downloadFile","responseType","download","then","catch","e","Object","keys","map","title","titleKey","row","rowKey","col","colKey"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/Dataset.css\";\r\nimport \"../css/Footer.css\";\r\nimport Footer from \"../components/Footer\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { Skeleton } from \"@mui/material\";\r\nimport Header from \"../components/Header\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\n\r\nconst Dataset = ({ home }) => {\r\n\tconst [csvData, setCsvData] = useState(null);\r\n\tconst [page, setPage] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst url = \"http://localhost:8000\";\r\n\t\tconst config = {\r\n\t\t\t//http://localhost/3000\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst getDataset = async () => {\r\n\t\t\t\tconst response = await axios.get(\r\n\t\t\t\t\t`${url}/api/get-dataset?page=${page}`,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t);\r\n\t\t\t\t// console.log(response.data);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\t// const jsonData = JSON.parse(response.data);\r\n\t\t\t\t\tsetCsvData(response.data);\r\n\t\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetDataset();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}, [page]);\r\n\r\n\tconst handlePageChange = (event) => {\r\n\t\tsetPage(event.selected + 1);\r\n\t};\r\n\r\n\tconst downloadFile = async () => {\r\n\t\tconst url = \"http://localhost:8000\";\r\n\t\tconst config = {\r\n\t\t\t//http://localhost/3000\r\n\t\t\tresponseType: \"blob\",\r\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\r\n\r\n\t\t\t\"Content-Type\": \"text/csv\",\r\n\t\t\t\"Content-Disposition\": 'attachment; filename=\"plasticFootprint.csv\"',\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst download = async () => {\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.get(`${url}/api/dataset/download-dataset`, config)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tconsole.log(\"Successful\");\r\n\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t\t// saveAs(response.data, \"plasticFootprint.csv\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.log(e));\r\n\t\t\t};\r\n\t\t\tdownload();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"Something went wrong\");\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Dataset__page\">\r\n\t\t\t<Header home={home} />\r\n\t\t\t<div className=\"dataset__header\">\r\n\t\t\t\t<h3 className=\"Dataset__title\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t<span>~</span> Dataset\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"Dataset__container\">\r\n\t\t\t\t<div className=\"Dataset\">\r\n\t\t\t\t\t{csvData ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<table\r\n\t\t\t\t\t\t\t\tclassName=\"Dataset__table\"\r\n\t\t\t\t\t\t\t\t// style={{ width: \"100%\", minWidth: \"1000px\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t{Object.keys(csvData[0]).map((title, titleKey) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(title);\r\n\t\t\t\t\t\t\t\t\t\t\treturn <th key={titleKey}>{title}</th>;\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{csvData.map((row, rowKey) => {\r\n\t\t\t\t\t\t\t\t\t\t// console.log(row);\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={rowKey}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{Object.keys(row).map((col, colKey) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <td key={colKey}>{row[col]}</td>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t{/* Requires bootstrap3 */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Skeleton variant=\"rectangular\" className=\"Dataset__skeleton\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ReactPaginate\r\n\t\t\t\tbreakLabel=\"...\"\r\n\t\t\t\tnextLabel={<ArrowForwardIosIcon fontSize=\"medium\" />}\r\n\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\tpageCount={7}\r\n\t\t\t\tpreviousLabel={<ArrowBackIosIcon fontSize=\"medium\" />}\r\n\t\t\t\tcontainerClassName={\"navigationButtons\"}\r\n\t\t\t\tpreviousLinkClassName={\"previousButton\"}\r\n\t\t\t\tnextLinkClassName={\"nextButton\"}\r\n\t\t\t\tdisabledClassName={\"navigationDisabled\"}\r\n\t\t\t\tactiveClassName={\"navigationActive\"}\r\n\t\t\t\trenderOnZeroPageCount={null}\r\n\t\t\t/>\r\n\r\n\t\t\t<section id=\"Landing__footer\">\r\n\t\t\t\t<div className=\"footer__container\">\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dataset;\r\n"]},"metadata":{},"sourceType":"module"}