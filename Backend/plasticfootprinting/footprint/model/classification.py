# -*- coding: utf-8 -*-
"""RandomForestClassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m3byLZLRrjt3TbcYQoRDcfcO0VQfQsLH

**Importing The Libraries**
"""

import numpy as np
import pandas as pd
import pickle

import sys
np.set_printoptions(suppress=True, threshold=sys.maxsize)

"""**Uploading the dataset**"""

dataset = pd.read_csv(r'./Data_For_Preprocessing - Sheet10.csv')

"""Beach Plastic Unit Conversion from KG to Tonnes"""

dataset['Beach_Plastics'] = dataset['Beach_Plastics'].div(1000)

"""**Inserting Plastic Production Classes**<br>
0 < Low < 10000<br>
10000 <= moderate < 100000<br>
100000<= high 
"""

"""**Splitting dataset** into<br>
**Matrix Of Features** X (containing all independent variable columns)<br>
**and**<br>
**Dependent Vector** y (containing the dependent variable column)
"""

X = dataset.iloc[:, :-2].values
y = dataset.iloc[:, -1].values

"""**Encoding Categorical Data Columns**

Academic Year Column, Encoding
"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

X[:, 1] = le.fit_transform(X[:, 1])

"""Plastic Production Class Column, Encoding"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

y = le.fit_transform(y)

"""State Names Column, Encoding"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(sparse=False), [0])], remainder='passthrough')

X = np.array(ct.fit_transform(X))


# Sparse = false  Important



"""**Train Test Split**"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)


"""**Feature Scaling**"""

from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()

X_train[:, 35:-2] = sc_X.fit_transform(X_train[:, 35:-2])
X_test[:, 35:-2] = sc_X.transform(X_test[:, 35:-2])

"""**Random Forest Classification Model**

Implementing the ML model
"""

from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 5)
classifier.fit(X_train, y_train)

filename = 'finalized_classification.sav'
pickle.dump(classifier, open(filename, 'wb'))

"""Evaluating the ML Model"""

from sklearn.metrics import confusion_matrix, accuracy_score
y_pred = classifier.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
print(cm)
